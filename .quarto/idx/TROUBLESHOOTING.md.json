{"title":"Troubleshooting","markdown":{"headingText":"Troubleshooting","containsRefs":false,"markdown":"\nCommon symptoms, quick diagnostics, and proven fixes for keeping Chessmate healthy.\n\n## Quick Smoke Test\nRun this loop whenever you reset dependencies or suspect ingest/embedding is wedged. Use\n`scripts/embedding_metrics.sh` between steps to verify queue health and estimated finish times.\n\n1. **Check Postgres connectivity**\n   ```sh\n   DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n   psql postgres://chess:chess@localhost:5433/chessmate -c \"SELECT 1\"\n   ```\n2. **Ingest a known-good PGN** (TWIC 1611 ships with the repo fixtures)\n   ```sh\n   DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n   dune exec chessmate -- ingest data/games/twic1611.pgn\n   ```\n3. **Confirm positions land with vector stubs**\n   ```sh\n   DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n   psql postgres://chess:chess@localhost:5433/chessmate \\\n   -c \"SELECT COUNT(*) FROM positions WHERE vector_id IS NOT NULL\"\n   ```\n4. **Start the embedding worker with exported env**\n   ```sh\n   set -a\n   source .env\n   DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n   QDRANT_URL=http://localhost:6333 dune exec embedding_worker -- --workers 3 --poll-sleep 1.0\n   ```\n   Adjust `--workers`/`--poll-sleep` based on throughput. (Value of 3 works well on a laptop.)\n5. **Watch the queue drain**\n   ```sh\n   DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n   psql postgres://chess:chess@localhost:5433/chessmate \\\n   -c \"SELECT status, COUNT(*) FROM embedding_jobs GROUP BY status ORDER BY status\"\n   ```\n   `pending` should drop while `completed` rises. If logs still show `Malformed job row`, pull the latest code - psql now emits real tab delimiters so rows parse correctly.\n\n## PGN Ingestion\n\n### Invalid UTF-8 while ingesting TWIC dumps\n- **Symptom** `psql ... invalid byte sequence for encoding \"UTF8\"` during `chessmate ingest`.\n- **Cause** Many public PGNs (including TWIC) ship as Windows-1252.\n- **Fix** Re-encode before ingestion:\n  ```sh\n  iconv -f WINDOWS-1252 -t UTF-8//TRANSLIT data/games/twic1611.pgn > /tmp/twic1611.utf8.pgn\n  cp /tmp/twic1611.utf8.pgn data/games/twic1611.pgn\n  ```\n  Transliteration keeps smart quotes/dashes readable. Re-run ingest afterwards.\n\n### Ingestion aborts with \"PGN contained no moves\"\n- **Symptom** Errors such as `PGN game #315 \"PGN contained no moves\"`.\n- **Fix** Run the preflight command to surface bad blocks:\n  ```sh\n  dune exec chessmate -- twic-precheck data/games/twic1611.pgn\n  ```\n  The report names each offender (missing `[Result]`, editorial fragments, etc.). Clean up the flagged entries, then re-run ingestion - completed games remain in Postgres.\n\n### Only the first game ingests\n- **Symptom** Log stops at `Stored game 3 with 65 positions` despite a large source file.\n- **Fix** Update to the multi-game ingest (already merged). Ensure you are running the latest binary; legacy builds processed a single game.\n\n## Environment Setup\n\n### opam cannot open `config.lock`\n- **Symptom** `opam: \"open\" failed on ... config.lock: Operation not permitted`.\n- **Fix** Some shells sandbox writes. Run `eval $(opam env --set-switch)` (or `opam env --set-switch | source`) instead of `opam switch set .`.\n\n### `chessmate_api` executable not found\n- **Symptom** `Program 'chessmate_api' not found!` when starting the API via Dune.\n- **Fix** Use the public name `dune exec -- chessmate-api --port 8080` or the full path `dune exec services/api/chessmate_api.exe -- --port 8080`.\n\n## Database & Vector Stores\n\n### `/query` responses show \"Vector search unavailable\"\n- **Symptom** API replies only contain SQL fallbacks with warnings.\n- **Fix** Ensure `QDRANT_URL` points to a reachable instance. The API degrades gracefully but warns until vector search returns.\n\n### Embedding jobs never leave `pending`\n- **Symptom** Queue size grows, worker logs stay quiet.\n- **Fix** Confirm the worker is running with valid env:\n  ```sh\n  dune exec chessmate -- embedding-worker\n  ```\n  Double-check `OPENAI_API_KEY` and endpoint settings. When the worker logs `Malformed job row`, update to the latest code (psql field separator fix). While triaging, run\n  ```sh\n  DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n    scripts/embedding_metrics.sh --interval 120\n  ```\n  to ensure new completions are flowing; a flat `throughput/min` indicates the worker is stuck before reaching OpenAI.\n\n### Worker runs but positions miss vectors\n- **Symptom** `/query` keeps warning about missing vectors even though the worker is active.\n- **Fix** Validate the pipeline end-to-end:\n  1. **Queue depth**\n     ```sh\n     DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n     psql postgres://chess:chess@localhost:5433/chessmate \\\n     -c \"SELECT status, COUNT(*) FROM embedding_jobs GROUP BY status\"\n     ```\n     `pending` should fall while `completed` rises.\n  2. **Postgres vector IDs**\n     ```sh\n     DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n     psql postgres://chess:chess@localhost:5433/chessmate \\\n     -c \"SELECT COUNT(*) FROM positions WHERE vector_id IS NOT NULL\"\n     ```\n     Non-zero counts mean vectors are being attached.\n  3. **Qdrant collection**\n     ```sh\n     curl \"$QDRANT_URL/collections/positions/points/count\"\n     ```\n     Expect a positive count; zero implies vectors were not pushed.\n  If any checkpoint flatlines, inspect worker logs for rate limits or credential issues.\n\n### Agent evaluation returns warnings\n- **Symptom** API/CLI responses include warnings such as `Agent evaluation failed` or lack `agent_score` even though the key is set.\n- **Fix**\n- Confirm `AGENT_API_KEY` and internet access; GPT-5 errors surface in the warning message.\n- Ensure `AGENT_REASONING_EFFORT` is valid (`minimal|low|medium|high`) and that the API key has access to the selected model.\n- Inspect `[agent-telemetry]` JSON lines for latency, token usage, and cost estimates—persistent spikes or missing usage often explain slowdowns and quota overruns.\n- If a cache is enabled (`AGENT_CACHE_CAPACITY`), stale responses can persist until the cache evicts entries—drop the capacity or restart the API to clear it after schema/prompt changes.\n- When the agent is temporarily disabled, results fall back to heuristic scoring—address the warning before relying on explanations.\n\n## Queue Management\n- **Monitor continuously.** `scripts/embedding_metrics.sh --interval 120 --log logs/embedding-metrics.log`\n- **Scale workers safely.** Prefer a single process with multiple loops:\n  ```sh\n  set -a\n  source .env\n  DATABASE_URL=postgres://chess:chess@localhost:5433/chessmate \\\n  QDRANT_URL=http://localhost:6333 dune exec embedding_worker -- --workers 3 --poll-sleep 1.0\n  ```\n  Increase `--workers` gradually (or stagger extra processes if you must) and watch\n  `scripts/embedding_metrics.sh` for rising throughput or new failures (429s, connection drops).\n- **Prune stale jobs.** When re-ingesting PGNs, run `scripts/prune_pending_jobs.sh 2000`\n  to mark pending jobs whose positions already hold a `vector_id` as completed before\n  queueing more work.\n- **Throttle ingest automatically.** The ingest CLI now enforces a guard based on\n  `CHESSMATE_MAX_PENDING_EMBEDDINGS` (default 250000). Set it to a higher value to push\n  more load, or `0`/negative to disable the guard entirely.\n\n## CLI Tips\n- Always export `DATABASE_URL` before running ingest/query commands.\n- `dune exec chessmate -- help` lists all subcommands and options.\n\nKeep extending this guide as new issues surface - sharable fixes save the whole team time.\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"TROUBLESHOOTING.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","theme":["cosmo","brand"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}