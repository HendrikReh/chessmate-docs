{"title":"LLM Prompts for Chess Analysis","markdown":{"headingText":"LLM Prompts for Chess Analysis","containsRefs":false,"markdown":"\nThis document contains useful prompts for using large language models (GPT-4, GPT-5, Claude, etc.) to perform chess-related transformations and analysis tasks.\n\n---\n\n## Pawn Structure Extraction\n\n### Purpose\n\nExtract pawn structure from a complete chess position (FEN string) by removing all pieces except pawns. This is useful for:\n\n- Analyzing pawn structure patterns independently of piece placement\n- Comparing pawn formations across different games\n- Generating training data for pawn structure embeddings\n- Identifying common pawn structures (isolated pawns, pawn chains, passed pawns, etc.)\n\n### Prompt Template\n\n```\nStrip all pieces besides the pawns from '<FEN_STRING>' and show me the resulting FEN.\n```\n\n### Example Usage\n\n**Input:**\n```\nStrip all pieces besides the pawns from 'rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1' and show me the resulting FEN.\n```\n\n**Expected Output:**\n```\n8/pppppppp/8/8/3P4/8/PPP1PPPP/8 b - d3 0 1\n```\n\n**Explanation:**\n- `rnbqkbnr` → `8` (rank 8: all pieces removed, 8 empty squares)\n- `pppppppp` → `pppppppp` (rank 7: black pawns remain)\n- Rank 6-5: empty (no pawns)\n- `3P4` → `3P4` (rank 4: white pawn on d4)\n- Rank 3: empty\n- `PPP1PPPP` → `PPP1PPPP` (rank 2: white pawns)\n- `RNBQKBNR` → `8` (rank 1: all pieces removed)\n- Castling rights cleared (`KQkq` → `-`) since kings are removed\n- En passant square retained (`d3`)\n\n### Integration with Chessmate\n\nThis technique can be used to:\n\n1. **Generate pawn structure embeddings**: Create separate embeddings for pawn structures to enhance search for \"games with similar pawn structures\"\n\n2. **Augment position metadata**: Store pawn structure FEN alongside full position FEN in the database\n\n3. **Enable pawn-specific queries**: Search for \"French Defense with isolated queen's pawn\" by matching pawn structure patterns\n\n4. **Preprocessing pipeline**: Add pawn extraction step in `lib/chess/fen.ml` or during ingestion\n\n### Implementation Example\n\nTo integrate this into Chessmate, you could:\n\n```ocaml\n(* lib/chess/fen.ml *)\n\nlet strip_pieces_except_pawns fen =\n  (* Parse FEN placement string *)\n  let parts = String.split fen ~on:' ' in\n  match parts with\n  | placement :: rest ->\n      (* Strip non-pawn pieces from each rank *)\n      let pawn_only_placement =\n        placement\n        |> String.to_list\n        |> List.map ~f:(fun ch ->\n             match ch with\n             | 'p' | 'P' | '/' -> ch  (* Keep pawns and rank separators *)\n             | _ when Char.is_digit ch -> ch  (* Keep empty square counts *)\n             | _ -> '1')  (* Replace pieces with 1 empty square *)\n        |> String.of_char_list\n        |> compress_empty_squares  (* Merge adjacent digits *)\n      in\n      (* Reconstruct FEN with pawn-only placement *)\n      (* Clear castling rights since kings are removed *)\n      String.concat ~sep:\" \" (pawn_only_placement :: rest |> update_castling)\n  | _ -> fen\n\nlet compress_empty_squares placement =\n  (* Helper to merge '1' '1' '1' → '3' *)\n  ...\n```\n\n---\n\n## Other Useful Chess Prompts\n\n### 1. ECO Code Classification\n\n**Purpose**: Classify opening positions by ECO code when header information is missing.\n\n**Prompt:**\n```\nAnalyze this chess position (FEN) and identify the opening's ECO code: '<FEN_STRING>'. Provide the ECO code (e.g., E97) and opening name.\n```\n\n### 2. Position Description Generation\n\n**Purpose**: Generate natural language descriptions of positions for embedding or annotation.\n\n**Prompt:**\n```\nDescribe the following chess position in 2-3 sentences, focusing on pawn structure, piece activity, and strategic themes: '<FEN_STRING>'.\n```\n\n### 3. Tactical Theme Detection\n\n**Purpose**: Identify tactical motifs present in a position.\n\n**Prompt:**\n```\nAnalyze this chess position (FEN) for tactical themes such as pins, forks, skewers, discovered attacks, or sacrifices: '<FEN_STRING>'. List all identified themes.\n```\n\n### 4. Game Phase Classification\n\n**Purpose**: Determine whether a position is opening, middlegame, or endgame.\n\n**Prompt:**\n```\nGiven this chess position (FEN): '<FEN_STRING>', classify the game phase as opening, middlegame, or endgame. Consider piece count, king safety, and pawn structure.\n```\n\n**Integration Note**: This could augment `lib/chess/position_features.ml` for automatic phase detection.\n\n---\n\n## Best Practices\n\n1. **Validation**: Always validate LLM output against known positions before integrating into production\n2. **Caching**: Cache LLM-generated analysis to avoid redundant API calls\n3. **Batch Processing**: Process multiple positions in a single API call when possible\n4. **Fallback Logic**: Implement deterministic fallbacks for critical features (e.g., phase detection by material count)\n5. **Cost Management**: Use cheaper models (GPT-4o-mini, Claude Haiku) for bulk processing\n\n---\n\n## GPT-5 Chess Understanding\n\nGPT-5 demonstrates strong chess knowledge and asks for clarification when faced with ambiguous opening names. For example:\n\n**User Query:**\n```\nShow me the ECO ranges for the following chess openings: King's Indian Defense, Tarrasch, QGD\n```\n\n**GPT-5 Response:**\n```\nCould you please clarify what you mean by \"Tarrasch\"? Are you referring to:\n1. The Tarrasch Defense (a line in the Queen's Gambit Declined),\n2. The Tarrasch Variation of the French Defense,\n3. Or another opening entirely?\n\nLet me know so I can give you the correct ECO code ranges.\n```\n\n**Key Observations:**\n\n1. **Contextual Awareness**: GPT-5 recognizes that \"Tarrasch\" is ambiguous without further context\n2. **Domain Knowledge**: Knows specific variations (Tarrasch Defense in QGD vs. Tarrasch in French)\n3. **User Experience**: Asks for clarification rather than guessing, preventing incorrect information\n4. **Professional Tone**: Provides numbered options for easy selection\n\n**Implications for Chessmate:**\n\n- GPT-5 can be reliably used for opening classification and ECO code mapping\n- Consider using GPT-5 for query expansion: \"Show me Tarrasch games\" → prompt user to disambiguate\n- Can assist with cleaning ambiguous opening names in ingested PGN files\n- Suitable for augmenting the opening catalogue in `lib/chess/openings.ml` with additional synonyms\n\n**Recommendation**: When building LLM-assisted features, leverage GPT-5's ability to handle ambiguity and provide clarifying questions rather than implementing complex disambiguation logic manually.\n\n---\n\n## Future Enhancements\n\nPotential LLM-assisted features for Chessmate:\n\n- **Automatic annotation generation**: \"Kasparov sacrifices the exchange for long-term compensation...\"\n- **Query expansion**: User asks \"attacking games\" → LLM expands to themes: king_attack, sacrifice, tactical\n- **Opening repertoire suggestions**: \"Based on your database, recommend underplayed lines in the Najdorf\"\n- **Position comparison**: \"How similar is this Sicilian to the famous Kasparov-Topalov 1999 game?\"\n\n---\n\n## Related Documentation\n\n- [Chessmate for Dummies](CHESSMATE_FOR_DUMMIES.md) - Complete ingestion and search flow\n- [Architecture](ARCHITECTURE.md) - System design and components\n- [Developer Handbook](DEVELOPER.md) - Contributing and coding standards\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"PROMPTS.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","theme":["cosmo","brand"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}